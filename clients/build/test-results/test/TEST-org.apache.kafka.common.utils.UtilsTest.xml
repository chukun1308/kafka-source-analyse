<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.apache.kafka.common.utils.UtilsTest" tests="44" skipped="0" failures="0" errors="0" timestamp="2020-10-29T02:31:47" hostname="chukun-mac" time="0.298">
  <properties/>
  <testcase name="testCloseAllQuietly" classname="org.apache.kafka.common.utils.UtilsTest" time="0.008"/>
  <testcase name="testIntersectionOfOne" classname="org.apache.kafka.common.utils.UtilsTest" time="0.047"/>
  <testcase name="testAbs" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testMin" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testPropsToMap" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testIntersectionOfMany" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testUnion" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="toArray" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="shouldAcceptValidDateFormats" classname="org.apache.kafka.common.utils.UtilsTest" time="0.003"/>
  <testcase name="utf8ByteBufferSerde" classname="org.apache.kafka.common.utils.UtilsTest" time="0.004"/>
  <testcase name="testDiff" classname="org.apache.kafka.common.utils.UtilsTest" time="0.002"/>
  <testcase name="testJoin" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testReadFullyOrFailWithPartialFileChannelReads" classname="org.apache.kafka.common.utils.UtilsTest" time="0.115"/>
  <testcase name="toArrayDirectByteBuffer" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="getNullableSizePrefixedArrayUnderflow" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="getNullableSizePrefixedArrayExact" classname="org.apache.kafka.common.utils.UtilsTest" time="0.004"/>
  <testcase name="testReadBytes" classname="org.apache.kafka.common.utils.UtilsTest" time="0.012"/>
  <testcase name="testGetHost" classname="org.apache.kafka.common.utils.UtilsTest" time="0.002"/>
  <testcase name="testGetPort" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testReadFullyWithPartialFileChannelReads" classname="org.apache.kafka.common.utils.UtilsTest" time="0.002"/>
  <testcase name="testRecursiveDelete" classname="org.apache.kafka.common.utils.UtilsTest" time="0.027"/>
  <testcase name="testUnionOfMany" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="testUnionOfNone" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testReadFullyOrFailWithRealFile" classname="org.apache.kafka.common.utils.UtilsTest" time="0.004"/>
  <testcase name="writeToBuffer" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="testFileAsStringNamedPipe" classname="org.apache.kafka.common.utils.UtilsTest" time="0.03"/>
  <testcase name="testConvertTo32BitField" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="testReadFullyIfEofIsReached" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testHostPattern" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="testDisjointIntersectionOfMany" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testFormatBytes" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testMurmur2" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="testIntersection" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="shouldThrowOnInvalidDateFormat" classname="org.apache.kafka.common.utils.UtilsTest" time="0.005"/>
  <testcase name="utf8ByteArraySerde" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="getNullableSizePrefixedArrayRemainder" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="getNullableSizePrefixedArrayInvalid" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="testFileAsStringSimpleFile" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="getNullableSizePrefixedArrayNull" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="getNullableSizePrefixedArrayExactEmpty" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <testcase name="testCloseAll" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testLoadProps" classname="org.apache.kafka.common.utils.UtilsTest" time="0.002"/>
  <testcase name="testUnionOfOne" classname="org.apache.kafka.common.utils.UtilsTest" time="0.001"/>
  <testcase name="testFormatAddress" classname="org.apache.kafka.common.utils.UtilsTest" time="0.0"/>
  <system-out><![CDATA[[2020-10-29 10:31:47,981] ERROR Failed to close test with type org.apache.kafka.common.utils.UtilsTest$$Lambda$293/1812744129 (org.apache.kafka.common.utils.Utils:981)
java.lang.RuntimeException: you should fail
	at org.apache.kafka.common.utils.UtilsTest.lambda$testCloseAllQuietly$7(UtilsTest.java:784)
	at org.apache.kafka.common.utils.Utils.closeQuietly(Utils.java:978)
	at org.apache.kafka.common.utils.Utils.closeAllQuietly(Utils.java:993)
	at org.apache.kafka.common.utils.UtilsTest.testCloseAllQuietly(UtilsTest.java:787)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.GeneratedMethodAccessor30.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:119)
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
