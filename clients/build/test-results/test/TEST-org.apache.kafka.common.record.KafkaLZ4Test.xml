<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.apache.kafka.common.record.KafkaLZ4Test" tests="1152" skipped="0" failures="0" errors="0" timestamp="2022-09-03T10:41:16" hostname="LAPTOP-FH01OFOM" time="0.195">
  <properties/>
  <testcase name="testHeaderPrematureEnd[0 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[0 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[0 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[0 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[0 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[0 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[0 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[0 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[0 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[1 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[1 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.004"/>
  <testcase name="testSkip[1 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[1 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[1 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[1 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[1 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[1 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[1 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[2 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[2 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[2 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[2 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[2 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[2 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[2 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[2 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[2 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[3 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[3 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[3 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[3 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[3 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[3 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[3 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[3 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[3 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[4 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[4 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[4 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[4 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[4 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[4 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[4 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[4 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[4 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[5 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[5 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[5 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[5 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[5 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[5 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[5 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[5 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[5 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[6 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[6 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[6 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[6 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[6 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[6 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[6 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[6 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[6 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[7 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[7 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[7 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[7 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[7 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[7 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[7 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[7 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[7 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[8 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[8 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[8 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[8 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[8 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[8 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[8 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[8 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[8 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[9 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[9 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[9 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[9 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[9 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[9 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[9 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[9 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[9 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[10 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[10 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[10 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[10 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[10 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[10 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[10 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[10 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[10 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[11 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[11 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[11 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[11 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[11 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[11 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[11 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[11 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[11 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[12 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[12 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[12 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[12 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[12 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[12 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[12 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[12 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[12 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[13 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[13 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[13 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBuffer[13 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[13 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[13 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[13 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[13 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[13 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[14 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[14 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[14 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[14 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[14 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[14 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[14 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[14 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[14 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[15 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[15 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[15 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[15 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[15 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[15 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[15 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[15 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[15 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=0, name='empty'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[16 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[16 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[16 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[16 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[16 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[16 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[16 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[16 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[16 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[17 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[17 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[17 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[17 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[17 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[17 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[17 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[17 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[17 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[18 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[18 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[18 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[18 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[18 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[18 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[18 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[18 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[18 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[19 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[19 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[19 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBuffer[19 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[19 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[19 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[19 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[19 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[19 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[20 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[20 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[20 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[20 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[20 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[20 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[20 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[20 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[20 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[21 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[21 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[21 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[21 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[21 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[21 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[21 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[21 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[21 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[22 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[22 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[22 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[22 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[22 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[22 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[22 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[22 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[22 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[23 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[23 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[23 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[23 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[23 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[23 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[23 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[23 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[23 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[24 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[24 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[24 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[24 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[24 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[24 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[24 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[24 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[24 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[25 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[25 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[25 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[25 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[25 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[25 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[25 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[25 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[25 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[26 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[26 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[26 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[26 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[26 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[26 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[26 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[26 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[26 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[27 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[27 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[27 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[27 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[27 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[27 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[27 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[27 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[27 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[28 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadBlockSize[28 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[28 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[28 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[28 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[28 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[28 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[28 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[28 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[29 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[29 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[29 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[29 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[29 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[29 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[29 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[29 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[29 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[30 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[30 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[30 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[30 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[30 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[30 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[30 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[30 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[30 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[31 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadBlockSize[31 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[31 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[31 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.016"/>
  <testcase name="testCompression[31 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[31 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[31 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[31 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[31 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1, name='onebyte'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[32 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[32 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[32 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[32 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[32 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[32 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[32 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[32 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[32 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[33 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[33 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[33 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBuffer[33 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[33 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[33 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[33 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[33 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[33 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[34 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[34 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[34 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[34 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[34 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[34 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[34 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[34 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[34 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[35 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[35 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testSkip[35 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[35 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[35 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[35 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[35 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[35 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[35 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[36 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[36 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[36 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[36 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[36 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[36 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[36 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[36 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[36 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[37 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadBlockSize[37 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[37 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[37 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[37 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[37 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[37 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[37 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[37 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[38 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[38 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[38 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[38 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[38 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[38 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[38 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[38 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[38 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[39 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[39 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[39 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[39 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[39 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[39 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[39 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[39 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[39 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[40 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[40 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[40 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[40 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[40 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[40 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[40 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[40 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[40 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[41 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[41 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[41 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[41 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[41 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[41 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[41 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[41 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[41 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[42 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[42 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[42 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[42 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[42 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[42 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[42 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[42 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[42 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[43 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[43 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[43 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[43 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[43 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[43 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[43 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[43 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[43 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[44 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[44 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[44 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[44 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[44 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[44 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[44 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[44 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[44 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[45 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[45 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[45 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[45 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[45 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[45 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[45 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[45 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[45 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[46 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[46 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[46 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[46 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[46 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[46 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[46 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[46 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[46 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[47 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[47 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[47 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBuffer[47 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[47 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[47 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[47 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[47 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[47 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[48 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[48 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[48 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[48 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[48 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[48 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[48 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[48 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[48 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[49 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[49 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[49 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[49 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[49 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[49 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[49 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[49 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[49 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[50 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[50 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[50 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[50 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[50 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[50 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[50 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[50 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[50 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[51 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[51 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[51 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[51 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[51 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[51 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[51 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[51 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[51 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[52 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[52 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[52 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[52 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[52 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[52 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[52 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[52 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[52 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[53 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[53 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testSkip[53 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[53 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[53 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[53 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[53 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[53 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[53 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[54 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[54 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[54 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[54 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[54 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[54 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[54 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[54 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[54 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[55 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[55 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[55 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[55 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[55 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[55 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[55 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[55 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[55 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[56 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[56 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[56 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[56 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[56 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[56 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[56 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[56 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[56 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[57 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[57 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[57 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[57 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[57 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[57 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[57 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[57 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[57 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[58 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[58 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[58 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[58 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[58 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[58 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[58 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[58 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[58 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[59 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[59 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[59 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[59 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[59 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[59 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[59 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[59 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[59 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[60 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[60 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[60 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[60 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[60 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[60 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[60 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[60 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[60 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[61 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[61 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[61 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[61 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[61 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[61 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[61 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[61 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[61 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[62 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[62 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[62 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[62 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[62 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[62 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[62 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[62 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[62 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[63 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[63 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[63 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[63 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[63 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[63 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[63 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[63 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[63 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=1000, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[64 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[64 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[64 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[64 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[64 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[64 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[64 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[64 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[64 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[65 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[65 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[65 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[65 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[65 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[65 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[65 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[65 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[65 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[66 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[66 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[66 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[66 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[66 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[66 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[66 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[66 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[66 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[67 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[67 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[67 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[67 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[67 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[67 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[67 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[67 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[67 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[68 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[68 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[68 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[68 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[68 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[68 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[68 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[68 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[68 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[69 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[69 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[69 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[69 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[69 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[69 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[69 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[69 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[69 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[70 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[70 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[70 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[70 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[70 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[70 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[70 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[70 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[70 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[71 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[71 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[71 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[71 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[71 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[71 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[71 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[71 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[71 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[72 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[72 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[72 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[72 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[72 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[72 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[72 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[72 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[72 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[73 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[73 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testSkip[73 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[73 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[73 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[73 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[73 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[73 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[73 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[74 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[74 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[74 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[74 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[74 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[74 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[74 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[74 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[74 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[75 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[75 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[75 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[75 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[75 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[75 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[75 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[75 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[75 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[76 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[76 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[76 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[76 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[76 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[76 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[76 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[76 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[76 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[77 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[77 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[77 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[77 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[77 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[77 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[77 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[77 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[77 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[78 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[78 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[78 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[78 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[78 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[78 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[78 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[78 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[78 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[79 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[79 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[79 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[79 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[79 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[79 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[79 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[79 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[79 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[80 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[80 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[80 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[80 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[80 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[80 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[80 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[80 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[80 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[81 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[81 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[81 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[81 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[81 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[81 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[81 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[81 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[81 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[82 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[82 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[82 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[82 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[82 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[82 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[82 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[82 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[82 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[83 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[83 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[83 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[83 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[83 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[83 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[83 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[83 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[83 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[84 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[84 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[84 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[84 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[84 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[84 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[84 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[84 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[84 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[85 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[85 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[85 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[85 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[85 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[85 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[85 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[85 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[85 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[86 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[86 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[86 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[86 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[86 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[86 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[86 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[86 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[86 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[87 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[87 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[87 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[87 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[87 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[87 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[87 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[87 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[87 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[88 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[88 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[88 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[88 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[88 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[88 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[88 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[88 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[88 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[89 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[89 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[89 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[89 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[89 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[89 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[89 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[89 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[89 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[90 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[90 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[90 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[90 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[90 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[90 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[90 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[90 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[90 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[91 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[91 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[91 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[91 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[91 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[91 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[91 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[91 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[91 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[92 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[92 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[92 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[92 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[92 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[92 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[92 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[92 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[92 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[93 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[93 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[93 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[93 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[93 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[93 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[93 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[93 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[93 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[94 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[94 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[94 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[94 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[94 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[94 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[94 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[94 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[94 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[95 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadBlockSize[95 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[95 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[95 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[95 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[95 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[95 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[95 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[95 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=65536, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[96 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[96 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[96 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[96 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[96 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[96 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[96 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[96 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[96 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[97 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[97 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[97 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[97 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[97 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[97 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[97 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[97 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[97 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[98 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[98 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[98 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[98 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[98 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[98 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[98 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[98 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[98 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[99 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[99 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testSkip[99 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[99 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[99 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[99 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[99 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[99 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[99 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[100 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[100 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[100 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[100 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[100 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[100 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[100 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[100 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[100 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[101 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[101 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[101 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[101 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[101 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[101 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[101 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[101 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[101 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[102 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[102 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[102 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[102 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[102 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[102 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[102 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[102 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[102 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[103 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[103 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[103 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBuffer[103 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[103 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[103 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[103 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[103 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[103 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[104 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[104 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[104 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[104 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[104 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[104 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[104 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[104 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[104 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[105 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[105 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[105 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[105 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[105 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[105 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[105 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.003"/>
  <testcase name="testNotSupported[105 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[105 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[106 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[106 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[106 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[106 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[106 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[106 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[106 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[106 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[106 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[107 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[107 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[107 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[107 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[107 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[107 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[107 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[107 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[107 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[108 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[108 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[108 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[108 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[108 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[108 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[108 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[108 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[108 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[109 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[109 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[109 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[109 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[109 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[109 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[109 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[109 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[109 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testHeaderPrematureEnd[110 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[110 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[110 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[110 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[110 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[110 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[110 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[110 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[110 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[111 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[111 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[111 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBuffer[111 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[111 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[111 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[111 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[111 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[111 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='random'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[112 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[112 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[112 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[112 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[112 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[112 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[112 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[112 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[112 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[113 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[113 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[113 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[113 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[113 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[113 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[113 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[113 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[113 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[114 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[114 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[114 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[114 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[114 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[114 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[114 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[114 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[114 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[115 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[115 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[115 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[115 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[115 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[115 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[115 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[115 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[115 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[116 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[116 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[116 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[116 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[116 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[116 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[116 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[116 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[116 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[117 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[117 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[117 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[117 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[117 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[117 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[117 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[117 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testBadFrameChecksum[117 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[118 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[118 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[118 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[118 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[118 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[118 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[118 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testNotSupported[118 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[118 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[119 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[119 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[119 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[119 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[119 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[119 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[119 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[119 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[119 useBrokenFlagDescriptorChecksum=false, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[120 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[120 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testSkip[120 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[120 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[120 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[120 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[120 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[120 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[120 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[121 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[121 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[121 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[121 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[121 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[121 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[121 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[121 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[121 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[122 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[122 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[122 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[122 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[122 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testDirectBuffer[122 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[122 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[122 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[122 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[123 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[123 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[123 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[123 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[123 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[123 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[123 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[123 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[123 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=false, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[124 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[124 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[124 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[124 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testCompression[124 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[124 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[124 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[124 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[124 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[125 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[125 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[125 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[125 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[125 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[125 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[125 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[125 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[125 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=false, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[126 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[126 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[126 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBuffer[126 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[126 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[126 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBufferSlice[126 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[126 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[126 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=false, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testHeaderPrematureEnd[127 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadBlockSize[127 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testSkip[127 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.001"/>
  <testcase name="testArrayBackedBuffer[127 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testCompression[127 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testDirectBuffer[127 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testArrayBackedBufferSlice[127 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testNotSupported[127 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <testcase name="testBadFrameChecksum[127 useBrokenFlagDescriptorChecksum=true, ignoreFlagDescriptorChecksum=true, blockChecksum=true, close=true, payload=Payload{size=98304, name='ones'}]" classname="org.apache.kafka.common.record.KafkaLZ4Test" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
