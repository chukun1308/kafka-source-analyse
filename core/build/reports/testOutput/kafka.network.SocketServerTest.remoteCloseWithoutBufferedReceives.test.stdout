[2020-10-29 10:45:02,385] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 60000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 100
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 1500
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.7-IV2
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = SSL://localhost:0
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 2097152
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /var/folders/y3/mvtqxgns6j93y74hb90_t2p9rflg_z/T/kafka-1672138093643210939
	log.dirs = null
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.7-IV2
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 1000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 5
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 1
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 5
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 50
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 1500
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = SSL
	security.providers = null
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 300000
	socket.request.max.bytes = 100
	socket.send.buffer.bytes = 300000
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = [hidden]
	ssl.keymanager.algorithm = PKIX
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = /var/folders/y3/mvtqxgns6j93y74hb90_t2p9rflg_z/T/serverKS6044451007773539635.jks
	ssl.keystore.password = [hidden]
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = /var/folders/y3/mvtqxgns6j93y74hb90_t2p9rflg_z/T/truststore4383463622236259471.jks
	ssl.truststore.password = [hidden]
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = 127.0.0.1:1
	zookeeper.connection.timeout.ms = 10000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig:361)
[2020-10-29 10:45:02,402] INFO Created ConnectionAcceptRate sensor, quotaLimit=2147483647 (kafka.network.ConnectionQuotas:66)
[2020-10-29 10:45:02,403] INFO Created ConnectionAcceptRate-SSL sensor, quotaLimit=2147483647 (kafka.network.ConnectionQuotas:66)
[2020-10-29 10:45:02,403] INFO Updated SSL max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas:66)
[2020-10-29 10:45:02,404] INFO Awaiting socket connections on localhost:56847. (kafka.network.Acceptor:66)
[2020-10-29 10:45:02,473] INFO [SocketServer brokerId=0] Created data-plane acceptor and processors for endpoint : ListenerName(SSL) (kafka.network.SocketServerTest$TestableSocketServer:66)
[2020-10-29 10:45:02,473] INFO [SocketServer brokerId=0] Starting socket server acceptors and processors (kafka.network.SocketServerTest$TestableSocketServer:66)
[2020-10-29 10:45:02,474] DEBUG [SocketServer brokerId=0] Wait for authorizer to complete start up on listener ListenerName(SSL) (kafka.network.SocketServerTest$TestableSocketServer:62)
[2020-10-29 10:45:02,474] DEBUG [SocketServer brokerId=0] Start processors on listener ListenerName(SSL) (kafka.network.SocketServerTest$TestableSocketServer:62)
[2020-10-29 10:45:02,489] DEBUG [SocketServer brokerId=0] Start acceptor thread on listener ListenerName(SSL) (kafka.network.SocketServerTest$TestableSocketServer:62)
[2020-10-29 10:45:02,490] INFO [SocketServer brokerId=0] Started data-plane acceptor and processor(s) for endpoint : ListenerName(SSL) (kafka.network.SocketServerTest$TestableSocketServer:66)
[2020-10-29 10:45:02,490] INFO [SocketServer brokerId=0] Started socket server acceptors and processors (kafka.network.SocketServerTest$TestableSocketServer:66)
[2020-10-29 10:45:02,492] DEBUG Accepted connection from /127.0.0.1:56860 on /127.0.0.1:56847 and assigned it to processor 0, sendBufferSize [actual|requested]: [300000|300000] recvBufferSize [actual|requested]: [310308|300000] (kafka.network.Acceptor:62)
[2020-10-29 10:45:02,492] DEBUG Processor 0 listening to new connection from /127.0.0.1:56860 (kafka.network.SocketServerTest$TestableSocketServer$$anon$8:62)
[2020-10-29 10:45:02,541] TRACE Processor 0 received request: RequestHeader(apiKey=PRODUCE, apiVersion=8, clientId=, correlationId=-1, initialPrincipalName=null, initialClientId=null) -- {acks=0,timeout=10000,partitionSizes=[]} (kafka.network.RequestChannel$:47)
[2020-10-29 10:45:02,542] TRACE Not sending PRODUCE response to client  as it's not required. (kafka.network.RequestChannel:54)
[2020-10-29 10:45:02,543] DEBUG Completed request:RequestHeader(apiKey=PRODUCE, apiVersion=8, clientId=, correlationId=-1, initialPrincipalName=null, initialClientId=null) -- {acks=0,timeout=10000,partitionSizes=[]},response: from connection 127.0.0.1:56847-127.0.0.1:56860-0;totalTime:1.581,requestQueueTime:0.0,localTime:1.635081360798E9,remoteTime:0.0,throttleTime:0,responseQueueTime:0.181,sendTime:0.004,securityProtocol:SSL,principal:User:ANONYMOUS,listener:SSL,clientInformation:ClientInformation(softwareName=unknown, softwareVersion=unknown) (kafka.request.logger:248)
[2020-10-29 10:45:02,543] TRACE Socket server received empty response to send, registering for read: Response(type=NoOp, request=Request(processor=0, connectionId=127.0.0.1:56847-127.0.0.1:56860-0, session=Session(User:ANONYMOUS,/127.0.0.1), listenerName=ListenerName(SSL), securityProtocol=SSL, buffer=java.nio.HeapByteBuffer[pos=22 lim=22 cap=22])) (kafka.network.SocketServerTest$TestableSocketServer$$anon$8:54)
[2020-10-29 10:45:02,544] INFO [SocketServer brokerId=0] Shutting down socket server (kafka.network.SocketServerTest$TestableSocketServer:66)
[2020-10-29 10:45:02,545] INFO [SocketServer brokerId=0] Stopping socket server request processors (kafka.network.SocketServerTest$TestableSocketServer:66)
[2020-10-29 10:45:02,545] DEBUG Closing server socket and selector. (kafka.network.Acceptor:62)
[2020-10-29 10:45:02,546] DEBUG Closing selector - processor 0 (kafka.network.SocketServerTest$TestableSocketServer$$anon$8:62)
[2020-10-29 10:45:02,546] INFO [SocketServer brokerId=0] Stopped socket server request processors (kafka.network.SocketServerTest$TestableSocketServer:66)
[2020-10-29 10:45:02,554] INFO [SocketServer brokerId=0] Shutdown completed (kafka.network.SocketServerTest$TestableSocketServer:66)
[2020-10-29 10:45:02,554] INFO [SocketServer brokerId=0] Shutting down socket server (kafka.network.SocketServer:66)
[2020-10-29 10:45:02,554] INFO [SocketServer brokerId=0] Stopping socket server request processors (kafka.network.SocketServer:66)
[2020-10-29 10:45:02,555] DEBUG Closing server socket and selector. (kafka.network.Acceptor:62)
[2020-10-29 10:45:02,555] DEBUG Closing selector - processor 0 (kafka.network.Processor:62)
[2020-10-29 10:45:02,556] INFO [SocketServer brokerId=0] Stopped socket server request processors (kafka.network.SocketServer:66)
[2020-10-29 10:45:02,562] INFO [SocketServer brokerId=0] Shutdown completed (kafka.network.SocketServer:66)
